apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: {{ .Values.kafka.name }}
  namespace: {{ .Release.Namespace }}
  {{- if .Values.kafka.annotations }}
  annotations:
    {{- toYaml .Values.kafka.annotations | nindent 4 }}
  {{- end }}
spec:
  kafka:
    version: {{ .Values.kafka.version }}
    logging:
      type: inline
      loggers:
        kafka.root.logger.level: "WARN"
    resources:
{{ toYaml .Values.kafka.resources | indent 6 }}
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    listeners:
      {{- range $listeners := .Values.kafka.listeners }}
      - name: {{ $listeners.name }}
        port: {{ $listeners.port }}
        type: {{ $listeners.type }}
        tls: {{ $listeners.tls }}
        {{- if $listeners.authentication }}
        authentication:
          type: {{ $listeners.authentication.type }}
        {{- end -}}
        {{- if eq $listeners.type "ingress" }}
        configuration:
{{ toYaml $listeners.configuration | indent 10 }}
        {{- end }}
      {{- end }}
    config:
      {{- $brokerReplicas := .Values.brokerPool.replicas -}}
      {{- if not .Values.isProd -}}
        {{- $brokerReplicas = .Values.combinedPool.replicas -}}
      {{- end }}
      offsets.topic.replication.factor: {{ $brokerReplicas }}
      transaction.state.log.replication.factor: {{ $brokerReplicas }}
      transaction.state.log.min.isr: {{ sub $brokerReplicas 1 }}
      auto.create.topics.enable: true
      num.partitions: 5
      default.replication.factor: 3
      min.insync.replicas: 2
      inter.broker.protocol.version: "{{ regexFind `^([0-9]+\.[0-9]+)` .Values.kafka.version }}"
  {{- if contains "prod" .Release.Namespace }}
    jvmOptions:
      -Xms: {{ .Values.kafka.jvmOptions.xmx }}
      -Xmx: {{ .Values.kafka.jvmOptions.xms }}
      -XX:
        MetaspaceSize: {{ .Values.kafka.jvmOptions.metaspaceSize }}
        MaxGCPauseMillis: {{ .Values.kafka.jvmOptions.maxGCPauseMillis }}
        InitiatingHeapOccupancyPercent: {{ .Values.kafka.jvmOptions.initiatingHeapOccupancyPercent }}
        G1HeapRegionSize: {{ .Values.kafka.jvmOptions.g1HeapRegionSize }}
        MinMetaspaceFreeRatio: {{ .Values.kafka.jvmOptions.minMetaspaceFreeRatio }}
        MaxMetaspaceFreeRatio: {{ .Values.kafka.jvmOptions.maxMetaspaceFreeRatio }}
        UseG1GC: {{ .Values.kafka.jvmOptions.useG1GC}}
  {{- end }}
  entityOperator:
    topicOperator: {}
    userOperator: {}
  kafkaExporter:
    template:
      pod:
        metadata:
          annotations:
            prometheus.io/scrape: "true"
            newrelic.io/scrape: "true"
            prometheus.io/port: "9404"
    topicRegex: ".*"
    groupRegex: ".*"
